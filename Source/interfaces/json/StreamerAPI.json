{
  "$schema": "interface.schema.json",
  "jsonrpc": "2.0",
  "info": {
    "title": "Streamer API",
    "class": "Streamer",
    "description": "Streamer JSON-RPC interface"
  },
  "common": {
    "$ref": "common.json"
  },
  "definitions": {
    "streamtype": {
      "type": "string",
      "enum": [
        "undefined",
        "cable",
        "handheld",
        "satellite",
        "terrestrial",
        "dab",
        "rf",
        "ip"
      ],
      "description": "Stream type",
      "example": "vod"
    },
    "state": {
      "description": "Stream state",
      "type": "string",
      "enum": [
        "idle",
        "loading",
        "prepared",
        "paused",
        "playing",
        "error"
      ],
      "example": "playing"
    },
    "drm": {
      "description": "DRM used",
      "type": "string",
      "enum": [
        "unknown",
        "clearkey",
        "playready",
        "widevine"
      ],
      "example": "clearkey"
    },
    "window": {
      "description": "Geometry of the window",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Horizontal position of the window (in pixels)",
          "example": 0
        },
        "y": {
          "type": "number",
          "description": "Vertical position of the window (in pixels)",
          "example": 0
        },
        "width": {
          "type": "number",
          "description": "Width of the window (in pixels)",
          "example": 1080
        },
        "height": {
          "type": "number",
          "description": "Height of the window (in pixels)",
          "example": 720
        }
      },
      "required": [
        "x",
        "y",
        "width",
        "height"
      ]
    }
  },
  "properties": {
    "speed": {
      "summary": "Playback speed.",
      "description": "Speed in percentage, -200, -100, 0, 100, 200, 400 etc",
      "params": {
        "description": "Speed to set; 0 - pause, 100 - normal playback forward, -100 - normal playback back, -200 - reverse at twice the speed, 50 - forward at half speed",
        "type": "number",
        "signed": true,
        "example": 100
      },
      "index": {
        "name": "Streamer ID",
        "example": "0"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Invalid speed given",
          "$ref": "#/common/errors/badrequest"
        },
        {
          "description": "Player is not in a valid state or decoder not attached",
          "$ref": "#/common/errors/illegalstate"
        },
        {
          "description": "Player instance is not available",
          "$ref": "#/common/errors/unavailable"
        }
      ]
    },
    "position": {
      "summary": "Stream position.",
      "params": {
        "description": "Position to set (in milliseconds)",
        "type": "number",
        "example": 60000,
        "size": 64
      },
      "index": {
        "name": "Streamer ID",
        "example": "0"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Invalid position given",
          "$ref": "#/common/errors/badrequest"
        },
        {
          "description": "Player is not in a valid state or decoder not attached",
          "$ref": "#/common/errors/illegalstate"
        }
      ]
    },
    "window": {
      "summary": "Stream playback window.",
      "params": {
        "type": "object",
        "properties": {
          "window": {
            "$ref": "#/definitions/window"
          }
        }
      },
      "index": {
        "name": "Streamer ID",
        "example": "0"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Invalid window geometry given",
          "$ref": "#/common/errors/badrequest"
        },
        {
          "description": "Player is not in a valid state or decoder not attached",
          "$ref": "#/common/errors/illegalstate"
        }
      ]
    },
    "speeds": {
      "summary": "Retrieves the speeds supported by the player",
      "readonly": true,
      "params": {
        "type": "array",
        "description": "Supported streams in percentage, 100, 200, 400, ..",
        "example": [
          0,
          100,
          -100,
          200,
          -200,
          400,
          -400
        ],
        "items": {
          "type": "integer",
          "signed": true,
          "description": "(Speeds in percentage)"
        }
      },
      "index": {
        "name": "Streamer ID",
        "example": "0"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Decoder not attached to the stream",
          "$ref": "#/common/errors/illegalstate"
        }
      ]
    },
    "streams": {
      "summary": "Retrieves all created stream instance IDs.",
      "readonly": true,
      "params": {
        "type": "array",
        "description": "Streamer IDs",
        "example": [
          0,
          1,
          2,
          3
        ],
        "items": {
          "type": "number",
          "description": "(a streamer ID)"
        }
      }
    },
    "type": {
      "summary": "Retrieves the streame type - DVB, ATSC or VOD",
      "readonly": true,
      "params": {
        "type": "object",
        "properties": {
          "stream": {
            "$ref": "#/definitions/streamtype"
          }
        }
      },
      "index": {
        "name": "Streamer ID",
        "example": "0"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        }
      ]
    },
    "drm": {
      "readonly": true,
      "summary": "Retrieves the DRM Type attached with stream",
      "events": [
        "drmchange"
      ],
      "params": {
        "type": "object",
        "properties": {
          "drm": {
            "$ref": "#/definitions/drm"
          }
        }
      },
      "index": {
        "name": "Streamer ID",
        "example": "0"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        }
      ]
    },
    "state": {
      "readonly": true,
      "summary": "Retrieves the current state of Player",
      "events": [
        "statechange"
      ],
      "params": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/definitions/state"
          }
        }
      },
      "index": {
        "name": "Streamer ID",
        "example": "0"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        }
      ]
    }
  },
  "methods": {
    "Streamer.1.status": {
      "summary": "Retrieves the status of a stream.",
      "params": {
        "description": "ID of the streamer instance",
        "type": "number",
        "size": 8,
        "example": 0
      },
      "result": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/streamtype"
          },
          "state": {
            "$ref": "#/definitions/state"
          },
          "metadata": {
            "description": "Custom metadata associated with the stream",
            "type": "string"
          },
          "drm": {
            "$ref": "#/definitions/drm"
          },
          "position": {
            "description": "Stream position (in milliseconds)",
            "type": "number",
            "example": 60000,
            "size": 64
          },
          "window": {
            "$ref": "#/definitions/window"
          }
        },
        "required": [
          "type",
          "state",
          "metadata",
          "drm"
        ]
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        }
      ]
    },
    "Streamer.1.create": {
      "summary": "Creates a stream instance.",
      "params": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/streamtype"
          }
        }
      },
      "result": {
        "type": "number",
        "size": 8,
        "description": "Streamer ID",
        "example": 0
      },
      "errors": [
        {
          "$ref": "#/common/errors/badrequest",
          "description": "Invalid stream type given"
        },
        {
          "$ref": "#/common/errors/unavailable",
          "description": "Streamer instance is not available"
        }
      ]
    },
    "Streamer.1.destroy": {
      "summary": "Destroys a stream instance.",
      "params": {
        "description": "ID of the streamer instance to be destroyed",
        "type": "number",
        "size": 8,
        "example": 0
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        }
      ]
    },
    "Streamer.1.load": {
      "summary": "Loads a source into a stream.",
      "params": {
        "type": "object",
        "properties": {
          "index": {
            "description": "ID of the streamer instance",
            "type": "number",
            "size": 8,
            "example": 0
          },
          "location": {
            "description": "Location of the source to load",
            "type": "string",
            "example": "http://example.com/sample.m3u8"
          }
        },
        "required": [
          "id",
          "location"
        ]
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Invalid location given",
          "$ref": "#/common/errors/badrequest"
        },
        {
          "description": "Player is not in a valid state",
          "$ref": "#/common/errors/illegalstate"
        },
        {
          "description": "Player instance is not available",
          "$ref": "#/common/errors/unavailable"
        }
      ]
    },
    "Streamer.1.attach": {
      "summary": "Attaches a decoder to the streamer.",
      "params": {
        "description": "ID of the streamer instance to attach a decoder to",
        "type": "number",
        "size": 8,
        "example": 0
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "$ref": "#/common/errors/inprogress",
          "description": "Decoder already attached"
        },
        {
          "description": "Stream not prepared",
          "$ref": "#/common/errors/illegalstate"
        }
      ]
    },
    "Streamer.1.detach": {
      "summary": "Detaches a decoder from the streamer",
      "params": {
        "description": "ID of the streamer instance to detach the decoder from",
        "type": "number",
        "size": 8,
        "example": 0
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown stream ID given",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Decoder not attached to the stream",
          "$ref": "#/common/errors/illegalstate"
        },
        {
          "$ref": "#/common/errors/inprogress",
          "description": "Decoder is in use"
        }
      ]
    }
  },
  "events": {
    "statechange": {
      "summary": "Notifies of stream state change. ID of the streamer instance shall be passed within the designator.",
      "example": "1.*",
      "id": {
        "name": "Streamer ID",
        "example": "0"
      },
      "params": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/definitions/state"
          }
        },
        "required": [
          "state"
        ]
      }
    },
    "drmchange": {
      "summary": "Notifies of stream DRM system change. ID of the streamer instance shall be passed within the designator.",
      "example": "1.*",
      "id": {
        "name": "Streamer ID",
        "example": "0"
      },
      "params": {
        "type": "object",
        "properties": {
          "drm": {
            "$ref": "#/definitions/drm"
          }
        },
        "required": [
          "drm"
        ]
      }
    },
    "timeupdate": {
      "summary": "Event fired to indicate the position in the stream. This event is fired every second to indicate that the stream has progressed by a second, and event does not fire, if the stream is in paused state",
      "example": "20",
      "id": {
        "name": "Streamer ID",
        "example": "0"
      },
      "params": {
        "type": "object",
        "properties": {
          "time": {
            "type": "number",
            "description": "Position in seconds",
            "size": 64,
            "example": 30
          }
        }
      }
    }
  }
}
